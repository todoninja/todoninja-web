on:
    issue_comment:
        types: [created]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    PR_NUBMER: ${{github.event.issue.number}}
    DEPLOYMENT_TAG_NAME: pr-${{github.event.issue.number}}

jobs:
    build:
        runs-on: ubuntu-latest
        if: ${{ github.event.issue.pull_request && github.actor == 'sebastiandittrich' && github.event.comment.body == '/deploy' }}
        permissions:
            contents: read
            packages: write
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 16
            - name: Log in to the Container registry
              uses: docker/login-action@v1
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v3
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=raw,value=pr-${{github.event.issue.number}}
            - name: Build and push Docker image
              uses: docker/build-push-action@v2
              with:
                  context: .
                  target: production
                  file: infrastructure/app/Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
    deploy:
        environment: production
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v2
            - name: Install doctl
              uses: digitalocean/action-doctl@v2
              with:
                  token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
            - run: |
                  echo "
                  images: [{name: depends-on-environment, newName: ghcr.io/todoninja/todoninja-web:${{ env.DEPLOYMENT_TAG_NAME }}}]" >> infrastructure/kubernetes/environments/preview/kustomization.yaml
            - name: Set correct review url
              run: sed -i s#url-value-placeholder#pr-${{ env.PR_NUMBER }}.review.parchment.ocean.dkdmerch.de#g infrastructure/kubernetes/environments/review/url-patch.yaml
            - name: Save DigitalOcean kubeconfig with short-lived credentials
              run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 todoninja-cluster
            - name: Create Namespace
              run: kubectl create namespace parchment-app-pr-${{ env.PR_NUMBER }}
            - name: Deploy to DigitalOcean Kubernetes
              run: kubectl apply -n parchment-app-pr-${{ env.PR_NUMBER }} -k infrastructure/kubernetes/environments/review
